<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classDataSet" kind="class" language="C++" prot="public">
    <compoundname>DataSet</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classDataSet_1aff85c06b3254386a049749f7a45b38d8" prot="public" static="no">
        <type><ref refid="classTensorPack_1afdd8b3882c7771632e5c342bbea6e7f5" kindref="member">TensorPack::tensorbase_iterator</ref></type>
        <definition>typedef TensorPack::tensorbase_iterator DataSet::tensor_iterator</definition>
        <argsstring></argsstring>
        <name>tensor_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="94" column="49" bodyfile="/Users/mellis/silc/include/dataset.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classDataSet_1abb4461695639bebc99c42a55d3fec935" prot="public" static="no">
        <type>TensorPack::const_tensorbase_iterator</type>
        <definition>typedef TensorPack::const_tensorbase_iterator DataSet::const_tensor_iterator</definition>
        <argsstring></argsstring>
        <name>const_tensor_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="95" column="55" bodyfile="/Users/mellis/silc/include/dataset.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classDataSet_1aa23f92588f7764f807b915248c210044" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string DataSet::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
<para>The name of the <ref refid="classDataSet" kindref="compound">DataSet</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="92" column="21" bodyfile="/Users/mellis/silc/include/dataset.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classDataSet_1a58dbe142f9b48513f23a34ca63499b0d" prot="private" static="no" mutable="no">
        <type><ref refid="classMetaData" kindref="compound">MetaData</ref></type>
        <definition>MetaData DataSet::_metadata</definition>
        <argsstring></argsstring>
        <name>_metadata</name>
        <briefdescription>
<para>The meta data object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="118" column="18" bodyfile="/Users/mellis/silc/include/dataset.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classDataSet_1ac76a3eb983164085493c576980abb8a3" prot="private" static="no" mutable="no">
        <type><ref refid="classTensorPack" kindref="compound">TensorPack</ref></type>
        <definition>TensorPack DataSet::_tensorpack</definition>
        <argsstring></argsstring>
        <name>_tensorpack</name>
        <briefdescription>
<para>The tensorpack object that holds all tensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="120" column="20" bodyfile="/Users/mellis/silc/include/dataset.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classDataSet_1a6a23da32d10a70bf7577b38d3b108f51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DataSet::DataSet</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>DataSet</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the dataset </para>
</briefdescription>
        </param>
        <briefdescription>
<para><ref refid="classDataSet" kindref="compound">DataSet</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="28" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a6b1e3be985c0b81e8677284139d7461e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DataSet::DataSet</definition>
        <argsstring>(DataSet &amp;&amp;dataset)</argsstring>
        <name>DataSet</name>
        <param>
          <type><ref refid="classDataSet" kindref="compound">DataSet</ref> &amp;&amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
<para><ref refid="classDataSet" kindref="compound">DataSet</ref> move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="32" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1aadd7efb5776f5936c6a098f87b322c8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classDataSet" kindref="compound">DataSet</ref> &amp;</type>
        <definition>DataSet&amp; DataSet::operator=</definition>
        <argsstring>(DataSet &amp;&amp;dataset)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classDataSet" kindref="compound">DataSet</ref> &amp;&amp;</type>
          <declname>dataset</declname>
        </param>
        <briefdescription>
<para><ref refid="classDataSet" kindref="compound">DataSet</ref> move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="35" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a6901e8bf9c2304d39c5e3dacd829d5ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DataSet::DataSet</definition>
        <argsstring>(const std::string &amp;name, char *buf, unsigned long long buf_size)</argsstring>
        <name>DataSet</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the dataset </para>
</briefdescription>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
          <briefdescription><para>The buffer used for object construction </para>
</briefdescription>
        </param>
        <param>
          <type>unsigned long long</type>
          <declname>buf_size</declname>
          <briefdescription><para>The buffer length </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Dataset constructor using serialized buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="38" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1aea913377b147fa94bd70d9083d86db76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DataSet::DataSet</definition>
        <argsstring>(const DataSet &amp;dataset)</argsstring>
        <name>DataSet</name>
        <param>
          <type>const <ref refid="classDataSet" kindref="compound">DataSet</ref> &amp;</type>
          <declname>dataset</declname>
          <briefdescription><para>The dataset to copy for construction </para>
</briefdescription>
        </param>
        <briefdescription>
<para><ref refid="classDataSet" kindref="compound">DataSet</ref> copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="44" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1af2997ae7a8d23692083ed69f4c79cae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataSet::add_tensor</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;type, void *data, std::vector&lt; int &gt; dims)</argsstring>
        <name>add_tensor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <briefdescription><para>A c_ptr to the data of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>dims</declname>
          <briefdescription><para>The dimensions of the data </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Add a tensor to the dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="48" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1accfe0648581402ec640ca18319af75e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataSet::add_meta</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;type, const void *data)</argsstring>
        <name>add_meta</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the metadata </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the metadata </para>
</briefdescription>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
          <briefdescription><para>A c_ptr to the metadata </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Add metadata field to the <ref refid="classDataSet" kindref="compound">DataSet</ref>. Default behavior is to append existing fields. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="55" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a699ef286c7c1bb0c33e579583dabf305" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataSet::get_tensor</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;type, void *&amp;data, std::vector&lt; int &gt; &amp;dims)</argsstring>
        <name>get_tensor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>void *&amp;</type>
          <declname>data</declname>
          <briefdescription><para>A c_ptr to the tensor data </para>
</briefdescription>
        </param>
        <param>
          <type>std::vector&lt; int &gt; &amp;</type>
          <declname>dims</declname>
          <briefdescription><para>The dimensions of the tensor retrieved </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get tensor data and return an allocated multi-dimensional array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="61" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a978531233311134844dcc938cb7dcfe3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataSet::unpack_tensor</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;type, void *data, std::vector&lt; int &gt; dims)</argsstring>
        <name>unpack_tensor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <briefdescription><para>A c_ptr to the data of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>dims</declname>
          <briefdescription><para>The dimensions of the data </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get tensor data and fill an already allocated array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="68" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1aaed13a16de66a44efc44e492a735a783" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataSet::get_meta</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;type, void *&amp;data, int &amp;length)</argsstring>
        <name>get_meta</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the metadata </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the metadata </para>
</briefdescription>
        </param>
        <param>
          <type>void *&amp;</type>
          <declname>data</declname>
          <briefdescription><para>A c_ptr reference to the metadata </para>
</briefdescription>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>length</declname>
          <briefdescription><para>The length of the meta </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get metadata field from the <ref refid="classDataSet" kindref="compound">DataSet</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="77" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1ac2c37e0b678def42bbfd0b2bb58a4650" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DataSet::add_tensor_buf_only</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;type, std::vector&lt; int &gt; dims, std::string_view buf)</argsstring>
        <name>add_tensor_buf_only</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>dims</declname>
          <briefdescription><para>The dimensions of the data </para>
</briefdescription>
        </param>
        <param>
          <type>std::string_view</type>
          <declname>buf</declname>
          <briefdescription><para>A c_ptr to the data of the tensor </para>
</briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method for adding a tensor when we only have the buffer and no data pointer. This is meant to be used primarily by the client. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="85" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a471c70c67a9650a9d723ec49360fdba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tensor_iterator</type>
        <definition>tensor_iterator DataSet::tensor_begin</definition>
        <argsstring>()</argsstring>
        <name>tensor_begin</name>
        <briefdescription>
<para>Returns an iterator pointing to the tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="98" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a96be70d41593b986d6ffbe1eb79b872d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const_tensor_iterator</type>
        <definition>const_tensor_iterator DataSet::tensor_cbegin</definition>
        <argsstring>()</argsstring>
        <name>tensor_cbegin</name>
        <briefdescription>
<para>Returns an const_iterator pointing to the tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="101" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a3721713b42800b6d94f183c1e3f193f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tensor_iterator</type>
        <definition>tensor_iterator DataSet::tensor_end</definition>
        <argsstring>()</argsstring>
        <name>tensor_end</name>
        <briefdescription>
<para>Returns an iterator pointing to the past-the-end tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="104" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a2feb520ddfcee751a8686bd47a488d41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const_tensor_iterator</type>
        <definition>const_tensor_iterator DataSet::tensor_cend</definition>
        <argsstring>()</argsstring>
        <name>tensor_cend</name>
        <briefdescription>
<para>Returns an const_iterator pointing to the past-the-end tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="107" column="31"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a49fd74ff5aa6018ac5828b1f542ac5be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string_view</type>
        <definition>std::string_view DataSet::get_metadata_buf</definition>
        <argsstring>()</argsstring>
        <name>get_metadata_buf</name>
        <briefdescription>
<para>Return a serialization of the meatdata. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="110" column="26"/>
      </memberdef>
      <memberdef kind="function" id="classDataSet_1a5890afd72878a0a7679902d34544f799" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DataSet::get_tensor_type</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_tensor_type</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Return the data type of tensor to the user. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/dataset.h" line="113" column="21"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/mellis/silc/include/dataset.h" line="23" column="1" bodyfile="/Users/mellis/silc/include/dataset.h" bodystart="24" bodyend="121"/>
    <listofallmembers>
      <member refid="classDataSet_1a58dbe142f9b48513f23a34ca63499b0d" prot="private" virt="non-virtual"><scope>DataSet</scope><name>_metadata</name></member>
      <member refid="classDataSet_1ac76a3eb983164085493c576980abb8a3" prot="private" virt="non-virtual"><scope>DataSet</scope><name>_tensorpack</name></member>
      <member refid="classDataSet_1accfe0648581402ec640ca18319af75e5" prot="public" virt="non-virtual"><scope>DataSet</scope><name>add_meta</name></member>
      <member refid="classDataSet_1af2997ae7a8d23692083ed69f4c79cae7" prot="public" virt="non-virtual"><scope>DataSet</scope><name>add_tensor</name></member>
      <member refid="classDataSet_1ac2c37e0b678def42bbfd0b2bb58a4650" prot="public" virt="non-virtual"><scope>DataSet</scope><name>add_tensor_buf_only</name></member>
      <member refid="classDataSet_1abb4461695639bebc99c42a55d3fec935" prot="public" virt="non-virtual"><scope>DataSet</scope><name>const_tensor_iterator</name></member>
      <member refid="classDataSet_1a6a23da32d10a70bf7577b38d3b108f51" prot="public" virt="non-virtual"><scope>DataSet</scope><name>DataSet</name></member>
      <member refid="classDataSet_1a6b1e3be985c0b81e8677284139d7461e" prot="public" virt="non-virtual"><scope>DataSet</scope><name>DataSet</name></member>
      <member refid="classDataSet_1a6901e8bf9c2304d39c5e3dacd829d5ed" prot="public" virt="non-virtual"><scope>DataSet</scope><name>DataSet</name></member>
      <member refid="classDataSet_1aea913377b147fa94bd70d9083d86db76" prot="public" virt="non-virtual"><scope>DataSet</scope><name>DataSet</name></member>
      <member refid="classDataSet_1aaed13a16de66a44efc44e492a735a783" prot="public" virt="non-virtual"><scope>DataSet</scope><name>get_meta</name></member>
      <member refid="classDataSet_1a49fd74ff5aa6018ac5828b1f542ac5be" prot="public" virt="non-virtual"><scope>DataSet</scope><name>get_metadata_buf</name></member>
      <member refid="classDataSet_1a699ef286c7c1bb0c33e579583dabf305" prot="public" virt="non-virtual"><scope>DataSet</scope><name>get_tensor</name></member>
      <member refid="classDataSet_1a5890afd72878a0a7679902d34544f799" prot="public" virt="non-virtual"><scope>DataSet</scope><name>get_tensor_type</name></member>
      <member refid="classDataSet_1aa23f92588f7764f807b915248c210044" prot="public" virt="non-virtual"><scope>DataSet</scope><name>name</name></member>
      <member refid="classDataSet_1aadd7efb5776f5936c6a098f87b322c8f" prot="public" virt="non-virtual"><scope>DataSet</scope><name>operator=</name></member>
      <member refid="classDataSet_1a471c70c67a9650a9d723ec49360fdba6" prot="public" virt="non-virtual"><scope>DataSet</scope><name>tensor_begin</name></member>
      <member refid="classDataSet_1a96be70d41593b986d6ffbe1eb79b872d" prot="public" virt="non-virtual"><scope>DataSet</scope><name>tensor_cbegin</name></member>
      <member refid="classDataSet_1a2feb520ddfcee751a8686bd47a488d41" prot="public" virt="non-virtual"><scope>DataSet</scope><name>tensor_cend</name></member>
      <member refid="classDataSet_1a3721713b42800b6d94f183c1e3f193f3" prot="public" virt="non-virtual"><scope>DataSet</scope><name>tensor_end</name></member>
      <member refid="classDataSet_1aff85c06b3254386a049749f7a45b38d8" prot="public" virt="non-virtual"><scope>DataSet</scope><name>tensor_iterator</name></member>
      <member refid="classDataSet_1a978531233311134844dcc938cb7dcfe3" prot="public" virt="non-virtual"><scope>DataSet</scope><name>unpack_tensor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
