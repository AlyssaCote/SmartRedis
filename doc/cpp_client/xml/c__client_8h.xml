<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="c__client_8h" kind="file" language="C++">
    <compoundname>c_client.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes refid="client_8h" local="yes">client.h</includes>
    <incdepgraph>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="26">
        <label>queue</label>
      </node>
      <node id="13">
        <label>dataset.h</label>
        <link refid="dataset_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>commandreply.h</label>
        <link refid="commandreply_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>silc.pb.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="31">
        <label>google/protobuf/stubs/port.h</label>
      </node>
      <node id="1">
        <label>/Users/mellis/silc/include/c_client.h</label>
        <link refid="c__client_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>command.tcc</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="34">
        <label>dbnode.h</label>
        <link refid="dbnode_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>tensorbase.h</label>
        <link refid="tensorbase_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>unordered_set</label>
      </node>
      <node id="4">
        <label>client.h</label>
        <link refid="client_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>fstream</label>
      </node>
      <node id="33">
        <label>commandlist.h</label>
        <link refid="commandlist_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>tensor.tcc</label>
      </node>
      <node id="25">
        <label>command.h</label>
        <link refid="command_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>memorylist.h</label>
        <link refid="memorylist_8h_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
      <node id="23">
        <label>memorylist.tcc</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
      <node id="30">
        <label>google/protobuf/reflection.h</label>
      </node>
      <node id="32">
        <label>tensorpack.h</label>
        <link refid="tensorpack_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="16">
        <label>unordered_map</label>
      </node>
      <node id="8">
        <label>chrono</label>
      </node>
      <node id="11">
        <label>sw/redis++/redis++.h</label>
      </node>
      <node id="9">
        <label>thread</label>
      </node>
      <node id="15">
        <label>set</label>
      </node>
      <node id="17">
        <label>forward_list</label>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
      <node id="21">
        <label>cstring</label>
      </node>
      <node id="18">
        <label>tensor.h</label>
        <link refid="tensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="c__client_8h_1a8116efcb8950360e130ef6d3f306bba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SmartSimCClient</definition>
        <argsstring>(bool cluster)</argsstring>
        <name>SmartSimCClient</name>
        <param>
          <type>bool</type>
          <declname>cluster</declname>
          <briefdescription><para>Flag to indicate if a database cluster is being used </para>
</briefdescription>
        </param>
        <briefdescription>
<para><ref refid="classSmartSimClient" kindref="compound">SmartSimClient</ref> C-client constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="13" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="13" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a480fad0dcfccd9c092daf7386f6c71ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_dataset</definition>
        <argsstring>(void *c_client, const void *dataset)</argsstring>
        <name>put_dataset</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const void *</type>
          <declname>dataset</declname>
          <briefdescription><para>The <ref refid="classDataSet" kindref="compound">DataSet</ref> object to send </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Put a <ref refid="classDataSet" kindref="compound">DataSet</ref> object into the database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="17" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="17" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1abb28c5a66c99fe1f000c24712ec8c020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* get_dataset</definition>
        <argsstring>(void *c_client, const char *name, const size_t name_length)</argsstring>
        <name>get_dataset</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>The name of the dataset object to fetch </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>name_length</declname>
          <briefdescription><para>The length of the name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get a <ref refid="classDataSet" kindref="compound">DataSet</ref> object from the database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="22" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="22" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a3df3acfd4abbba4f492f4197f5273d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rename_dataset</definition>
        <argsstring>(void *c_client, const char *name, const size_t name_length, const char *new_name, const size_t new_name_length)</argsstring>
        <name>rename_dataset</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>The name of the dataset object </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>name_length</declname>
          <briefdescription><para>The length of the name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_name</declname>
          <briefdescription><para>The name of the dataset object </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>new_name_length</declname>
          <briefdescription><para>The length of the new name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Move a <ref refid="classDataSet" kindref="compound">DataSet</ref> to a new key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="28" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="28" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1aa7ff232e50f2495e22ca4dc097980657" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copy_dataset</definition>
        <argsstring>(void *c_client, const char *src_name, const size_t src_name_length, const char *dest_name, const size_t dest_name_length)</argsstring>
        <name>copy_dataset</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>src_name</declname>
          <briefdescription><para>The source name of the dataset object </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>src_name_length</declname>
          <briefdescription><para>The length of the src_name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>dest_name</declname>
          <briefdescription><para>The destination name of the dataset object </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>dest_name_length</declname>
          <briefdescription><para>The length of the dest_name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Copy a <ref refid="classDataSet" kindref="compound">DataSet</ref> to a new key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="36" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="36" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a3a9706fc9cac61e62262c21c603ba3c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delete_dataset</definition>
        <argsstring>(void *c_client, const char *name, const size_t name_length)</argsstring>
        <name>delete_dataset</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>The name of the dataset object </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>name_length</declname>
          <briefdescription><para>The length of the name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Delete a <ref refid="classDataSet" kindref="compound">DataSet</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="44" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="44" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1af0d20678e8d65109dc79d555675a45aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void put_tensor</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char *type, const size_t type_length, void *data, const int *dims, const int n_dims)</argsstring>
        <name>put_tensor</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to place the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>type_length</declname>
          <briefdescription><para>The length of the type c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <briefdescription><para>A c ptr to the beginning of the data </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>dims</declname>
          <briefdescription><para>Length along each dimension of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_dims</declname>
          <briefdescription><para>The number of dimensions of the tensor </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Put a tensor into the database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="50" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="50" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a7233619ddb5b6f9d6c9af0e112872abd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_tensor</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char *type, const size_t type_length, void *result, const int *dims, const int n_dims)</argsstring>
        <name>get_tensor</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to fetch the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>type_length</declname>
          <briefdescription><para>The length of the type c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>result</declname>
          <briefdescription><para>A c ptr to the beginning of the result array to fill </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>dims</declname>
          <briefdescription><para>The dimensions of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_dims</declname>
          <briefdescription><para>The number of dimensions of the tensor </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get a tensor from the database and fill the provided memory space (result) that is layed out as defined by dims. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="61" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="61" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a57fc62067d185872663860c4cc2859fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rename_tensor</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char *new_key, const size_t new_key_length)</argsstring>
        <name>rename_tensor</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to fetch the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>new_key</declname>
          <briefdescription><para>The new tensor key </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>new_key_length</declname>
          <briefdescription><para>The length of the new_key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Move a tensor to a new key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="72" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="72" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a1c2a70ae867515426119ba8b4730590c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delete_tensor</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length)</argsstring>
        <name>delete_tensor</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to fetch the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Delete a tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="80" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="80" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a5001efade63f703a3022b6311471c679" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copy_tensor</definition>
        <argsstring>(void *c_client, const char *src_name, const size_t src_name_length, const char *dest_name, const size_t dest_name_length)</argsstring>
        <name>copy_tensor</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>src_name</declname>
          <briefdescription><para>The source name of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>src_name_length</declname>
          <briefdescription><para>The length of the src_name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>dest_name</declname>
          <briefdescription><para>The destination name of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>dest_name_length</declname>
          <briefdescription><para>The length of the dest_name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>This method will copy a tensor to the destination key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="86" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a5afed98b651438049b42ea65f56dbc51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_model_from_file</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char *model_file, const size_t model_file_length, const char *backend, const size_t backend_length, const char *device, const size_t device_length, const int batch_size, const int min_batch_size, const char *tag, const size_t tag_length, const char **inputs, const int *input_lengths, const int n_inputs, const char **outputs, const int *output_lengths, const int n_outputs)</argsstring>
        <name>set_model_from_file</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to place the model </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>model_file</declname>
          <briefdescription><para>The file storing the model </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>model_file_length</declname>
          <briefdescription><para>The length of the file name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>backend</declname>
          <briefdescription><para>The name of the backend (TF, TFLITE, TORCH, ONNX) </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>backend_length</declname>
          <briefdescription><para>The length of the backend name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>device</declname>
          <briefdescription><para>The name of the device (CPU, GPU, GPU:0, GPU:1...) </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>device_length</declname>
          <briefdescription><para>The length of the device name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>batch_size</declname>
          <briefdescription><para>The batch size for model execution </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>min_batch_size</declname>
          <briefdescription><para>The minimum batch size for model execution </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
          <briefdescription><para>A tag to attach to the model for information purposes </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>tag_length</declname>
          <briefdescription><para>The length of the tag c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>inputs</declname>
          <briefdescription><para>One or more names of model input nodes (TF models) </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>input_lengths</declname>
          <briefdescription><para>The length of each input name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_inputs</declname>
          <briefdescription><para>The number of inputs </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>outputs</declname>
          <briefdescription><para>One or more names of model output nodes (TF models) </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>output_lengths</declname>
          <briefdescription><para>The length of each output name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_outputs</declname>
          <briefdescription><para>The number of outputs </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set a model (from file) in the database for future execution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="94" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="94" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a7691c7085fb4c0385e9c8a1c11553d58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_model</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char *model, const size_t model_length, const char *backend, const size_t backend_length, const char *device, const size_t device_length, const int batch_size, const int min_batch_size, const char *tag, const size_t tag_length, const char **inputs, const int *input_lengths, const int n_inputs, const char **outputs, const int *output_lengths, const int n_outputs)</argsstring>
        <name>set_model</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to place the model </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>model</declname>
          <briefdescription><para>The model as a continuous buffer </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>model_length</declname>
          <briefdescription><para>The length of the model buffer c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>backend</declname>
          <briefdescription><para>The name of the backend (TF, TFLITE, TORCH, ONNX) </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>backend_length</declname>
          <briefdescription><para>The length of the backend name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>device</declname>
          <briefdescription><para>The name of the device (CPU, GPU, GPU:0, GPU:1...) </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>device_length</declname>
          <briefdescription><para>The length of the device name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>batch_size</declname>
          <briefdescription><para>The batch size for model execution </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>min_batch_size</declname>
          <briefdescription><para>The minimum batch size for model execution </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>tag</declname>
          <briefdescription><para>A tag to attach to the model for information purposes </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>tag_length</declname>
          <briefdescription><para>The length of the tag c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>inputs</declname>
          <briefdescription><para>One or more names of model input nodes (TF models) </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>input_lengths</declname>
          <briefdescription><para>The length of each input name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_inputs</declname>
          <briefdescription><para>The number of inputs </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>outputs</declname>
          <briefdescription><para>One or more names of model output nodes (TF models) </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>output_lengths</declname>
          <briefdescription><para>The length of each output name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_outputs</declname>
          <briefdescription><para>The number of outputs </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set a model (from buffer) in the database for future execution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="116" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1ac02945a7d1ebf9811dcdcd274e7d57de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_model</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char **model, size_t *model_length)</argsstring>
        <name>get_model</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c c lient to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to get the model </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>model</declname>
          <briefdescription><para>The model as a continuous buffer </para>
</briefdescription>
        </param>
        <param>
          <type>size_t *</type>
          <declname>model_length</declname>
          <briefdescription><para>The length of the model buffer c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get a model in the database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="138" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="138" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a9653370ae0fbf520623863974f2347b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_script_from_file</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char *device, const size_t device_length, const char *script_file, const size_t script_file_length)</argsstring>
        <name>set_script_from_file</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to place the script </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>device</declname>
          <briefdescription><para>The name of the device (CPU, GPU, GPU:0, GPU:1...) </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>device_length</declname>
          <briefdescription><para>The length of the device name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>script_file</declname>
          <briefdescription><para>The name of the script file </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>script_file_length</declname>
          <briefdescription><para>The length of the script file name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set a script (from file) in the database for future execution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="146" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="146" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1af6cb2a29b3d6a99e09670f764e176959" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_script</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char *device, const size_t device_length, const char *script, const size_t script_length)</argsstring>
        <name>set_script</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to place the script </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>device</declname>
          <briefdescription><para>The name of the device (CPU, GPU, GPU:0, GPU:1...) </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>device_length</declname>
          <briefdescription><para>The length of the device name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>script</declname>
          <briefdescription><para>The script as a c-string buffer </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>script_length</declname>
          <briefdescription><para>The length of the script c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Set a script (from buffer) in the database for future execution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="156" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="156" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a622f85bd6fb4b5409e589c9e61f65d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_script</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char **script, size_t *script_length)</argsstring>
        <name>get_script</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to get the model </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>script</declname>
          <briefdescription><para>The script as a continuous buffer </para>
</briefdescription>
        </param>
        <param>
          <type>size_t *</type>
          <declname>script_length</declname>
          <briefdescription><para>The length of the script buffer c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Get the script from the database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="166" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="166" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a50fce32bc5c3d63cd6ce7663d75684d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void run_script</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char *function, const size_t function_length, const char **inputs, const int *input_lengths, const int n_inputs, const char **outputs, const int *output_lengths, const int n_outputs)</argsstring>
        <name>run_script</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to place the script </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
          <briefdescription><para>The name of the function in the script to call </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>function_length</declname>
          <briefdescription><para>The length of the function name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>inputs</declname>
          <briefdescription><para>One or more names of model input nodes (TF models) </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>input_lengths</declname>
          <briefdescription><para>The length of each input name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_inputs</declname>
          <briefdescription><para>The number of inputs </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>outputs</declname>
          <briefdescription><para>One or more names of model output nodes (TF models) </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>output_lengths</declname>
          <briefdescription><para>The length of each output name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_outputs</declname>
          <briefdescription><para>The number of outputs </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Run a script in the database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="174" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="174" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a0d3d6d40322e63d802d522f04ce22e5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void run_model</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const char **inputs, const int *input_lengths, const int n_inputs, const char **outputs, const int *output_lengths, const int n_outputs)</argsstring>
        <name>run_model</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to use to run the model </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>inputs</declname>
          <briefdescription><para>One or more names of model input nodes (TF models) </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>input_lengths</declname>
          <briefdescription><para>The length of each input name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_inputs</declname>
          <briefdescription><para>The number of inputs </para>
</briefdescription>
        </param>
        <param>
          <type>const char **</type>
          <declname>outputs</declname>
          <briefdescription><para>One or more names of model output nodes (TF models) </para>
</briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>output_lengths</declname>
          <briefdescription><para>The length of each output name c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>n_outputs</declname>
          <briefdescription><para>The number of outputs </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Run a model in the database. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="188" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="188" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1a37428e218a559cce624b763d963af6d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool key_exists</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length)</argsstring>
        <name>key_exists</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to check </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Check if a key exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="200" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="200" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="c__client_8h_1acda9c7ac1c114a638d9fbd793f3ccb97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool poll_key</definition>
        <argsstring>(void *c_client, const char *key, const size_t key_length, const int poll_frequency_ms, const int num_tries)</argsstring>
        <name>poll_key</name>
        <param>
          <type>void *</type>
          <declname>c_client</declname>
          <briefdescription><para>The c client to use for communication </para>
</briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>key</declname>
          <briefdescription><para>The key to check </para>
</briefdescription>
        </param>
        <param>
          <type>const size_t</type>
          <declname>key_length</declname>
          <briefdescription><para>The length of the key c-string, excluding null terminating character </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>poll_frequency_ms</declname>
          <briefdescription><para>The frequency of polls </para>
</briefdescription>
        </param>
        <param>
          <type>const int</type>
          <declname>num_tries</declname>
          <briefdescription><para>The total number of tries </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Poll database until key exists or number of tries is exceeded. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/c_client.h" line="206" column="6" declfile="/Users/mellis/silc/include/c_client.h" declline="206" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C-wrappers for the C++ <ref refid="classSmartSimClient" kindref="compound">SmartSimClient</ref> class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SMARTSIM_C_CLIENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMARTSIM_C_CLIENT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="client_8h" kindref="compound">client.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13" refid="c__client_8h_1a8116efcb8950360e130ef6d3f306bba6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="c__client_8h_1a8116efcb8950360e130ef6d3f306bba6" kindref="member">SmartSimCClient</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cluster<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="c__client_8h_1a480fad0dcfccd9c092daf7386f6c71ed" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a480fad0dcfccd9c092daf7386f6c71ed" kindref="member">put_dataset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>dataset<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="c__client_8h_1abb28c5a66c99fe1f000c24712ec8c020" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="c__client_8h_1abb28c5a66c99fe1f000c24712ec8c020" kindref="member">get_dataset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>name_length<sp/></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="c__client_8h_1a3df3acfd4abbba4f492f4197f5273d31" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a3df3acfd4abbba4f492f4197f5273d31" kindref="member">rename_dataset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>name_length<sp/>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>new_name<sp/>,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_name_length<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="c__client_8h_1aa7ff232e50f2495e22ca4dc097980657" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1aa7ff232e50f2495e22ca4dc097980657" kindref="member">copy_dataset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src_name<sp/>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_name_length<sp/>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest_name<sp/>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_name_length<sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="c__client_8h_1a3a9706fc9cac61e62262c21c603ba3c7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a3a9706fc9cac61e62262c21c603ba3c7" kindref="member">delete_dataset</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>name_length<sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="c__client_8h_1af0d20678e8d65109dc79d555675a45aa" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1af0d20678e8d65109dc79d555675a45aa" kindref="member">put_tensor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type<sp/>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>type_length<sp/>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data<sp/>,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dims<sp/>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_dims<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="c__client_8h_1a7233619ddb5b6f9d6c9af0e112872abd" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a7233619ddb5b6f9d6c9af0e112872abd" kindref="member">get_tensor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type<sp/>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>type_length<sp/>,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>result<sp/>,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>dims<sp/>,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_dims<sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="c__client_8h_1a57fc62067d185872663860c4cc2859fc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a57fc62067d185872663860c4cc2859fc" kindref="member">rename_tensor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>new_key<sp/>,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_key_length<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="c__client_8h_1a1c2a70ae867515426119ba8b4730590c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a1c2a70ae867515426119ba8b4730590c" kindref="member">delete_tensor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="c__client_8h_1a5001efade63f703a3022b6311471c679" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a5001efade63f703a3022b6311471c679" kindref="member">copy_tensor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>src_name<sp/>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>src_name_length<sp/>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dest_name<sp/>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dest_name_length<sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="c__client_8h_1a5afed98b651438049b42ea65f56dbc51" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a5afed98b651438049b42ea65f56dbc51" kindref="member">set_model_from_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>model_file<sp/>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>model_file_length<sp/>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>backend<sp/>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>backend_length<sp/>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>device<sp/>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>device_length<sp/><sp/>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_size<sp/>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_batch_size<sp/>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tag<sp/>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tag_length<sp/>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>inputs<sp/>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>input_lengths<sp/>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_inputs<sp/>,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>outputs<sp/>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>output_lengths<sp/>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_outputs<sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="c__client_8h_1a7691c7085fb4c0385e9c8a1c11553d58" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a7691c7085fb4c0385e9c8a1c11553d58" kindref="member">set_model</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>model<sp/>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>model_length<sp/>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>backend<sp/>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>backend_length<sp/>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>device<sp/>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>device_length<sp/><sp/>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_size<sp/>,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min_batch_size<sp/>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>tag<sp/>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>tag_length<sp/>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>inputs<sp/>,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>input_lengths<sp/>,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_inputs<sp/>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>outputs<sp/>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>output_lengths<sp/>,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_outputs<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="c__client_8h_1ac02945a7d1ebf9811dcdcd274e7d57de" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1ac02945a7d1ebf9811dcdcd274e7d57de" kindref="member">get_model</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>model<sp/>,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>model_length<sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="c__client_8h_1a9653370ae0fbf520623863974f2347b5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a9653370ae0fbf520623863974f2347b5" kindref="member">set_script_from_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>device<sp/>,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>device_length<sp/><sp/>,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script_file<sp/>,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>script_file_length<sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="c__client_8h_1af6cb2a29b3d6a99e09670f764e176959" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1af6cb2a29b3d6a99e09670f764e176959" kindref="member">set_script</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>device<sp/>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>device_length<sp/><sp/>,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>script<sp/>,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>script_length<sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="c__client_8h_1a622f85bd6fb4b5409e589c9e61f65d81" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a622f85bd6fb4b5409e589c9e61f65d81" kindref="member">get_script</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>script<sp/>,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>script_length<sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="c__client_8h_1a50fce32bc5c3d63cd6ce7663d75684d8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a50fce32bc5c3d63cd6ce7663d75684d8" kindref="member">run_script</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>function_length<sp/>,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>inputs<sp/>,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>input_lengths<sp/>,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_inputs<sp/>,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>outputs<sp/>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>output_lengths<sp/>,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_outputs<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="c__client_8h_1a0d3d6d40322e63d802d522f04ce22e5e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a0d3d6d40322e63d802d522f04ce22e5e" kindref="member">run_model</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>inputs<sp/>,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>input_lengths<sp/>,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_inputs<sp/>,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>outputs<sp/>,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>output_lengths<sp/>,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_outputs<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="c__client_8h_1a37428e218a559cce624b763d963af6d8" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1a37428e218a559cce624b763d963af6d8" kindref="member">key_exists</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="c__client_8h_1acda9c7ac1c114a638d9fbd793f3ccb97" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="c__client_8h_1acda9c7ac1c114a638d9fbd793f3ccb97" kindref="member">poll_key</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>c_client<sp/>,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>key<sp/>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>key_length<sp/>,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>poll_frequency_ms<sp/>,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_tries<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>SMARTSIM_C_CLIENT_H</highlight></codeline>
    </programlisting>
    <location file="/Users/mellis/silc/include/c_client.h"/>
  </compounddef>
</doxygen>
