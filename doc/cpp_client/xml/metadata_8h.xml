<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="metadata_8h" kind="file" language="C++">
    <compoundname>metadata.h</compoundname>
    <includes local="yes">stdlib.h</includes>
    <includes local="no">string</includes>
    <includes local="no">unordered_map</includes>
    <includes local="yes">silc.pb.h</includes>
    <includes local="no">google/protobuf/reflection.h</includes>
    <includes local="no">google/protobuf/stubs/port.h</includes>
    <includes refid="memorylist_8h" local="yes">memorylist.h</includes>
    <includedby refid="dataset_8h" local="yes">/Users/mellis/silc/include/dataset.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/mellis/silc/include/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>silc.pb.h</label>
      </node>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="7">
        <label>google/protobuf/stubs/port.h</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="8">
        <label>memorylist.h</label>
        <link refid="memorylist_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>memorylist.tcc</label>
      </node>
      <node id="6">
        <label>google/protobuf/reflection.h</label>
      </node>
      <node id="4">
        <label>unordered_map</label>
      </node>
      <node id="9">
        <label>forward_list</label>
      </node>
      <node id="10">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/Users/mellis/silc/include/dataset.h</label>
        <link refid="dataset_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/mellis/silc/include/c_dataset.h</label>
        <link refid="c__dataset_8h"/>
      </node>
      <node id="1">
        <label>/Users/mellis/silc/include/metadata.h</label>
        <link refid="metadata_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/Users/mellis/silc/include/c_client.h</label>
        <link refid="c__client_8h"/>
      </node>
      <node id="3">
        <label>/Users/mellis/silc/include/client.h</label>
        <link refid="client_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classMetaData" prot="public">MetaData</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="metadata_8h_1ab132d8c40e6aea881a3d2a4859882df3" prot="public" static="no">
        <type>spb::RepeatedStringMeta</type>
        <definition>typedef spb::RepeatedStringMeta StringMsg</definition>
        <argsstring></argsstring>
        <name>StringMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="16" column="33" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="metadata_8h_1a409f1110bd4b176066c1a0581e6d134c" prot="public" static="no">
        <type>spb::RepeatedDoubleMeta</type>
        <definition>typedef spb::RepeatedDoubleMeta DoubleMsg</definition>
        <argsstring></argsstring>
        <name>DoubleMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="17" column="33" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="metadata_8h_1a424e50861f1e25be14ba5b989695246e" prot="public" static="no">
        <type>spb::RepeatedFloatMeta</type>
        <definition>typedef spb::RepeatedFloatMeta FloatMsg</definition>
        <argsstring></argsstring>
        <name>FloatMsg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="18" column="32" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="metadata_8h_1a988f50cada5a4db66783cb9660cc7720" prot="public" static="no">
        <type>spb::RepeatedSInt64Meta</type>
        <definition>typedef spb::RepeatedSInt64Meta Int64Msg</definition>
        <argsstring></argsstring>
        <name>Int64Msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="19" column="33" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="metadata_8h_1a4d96a11acadcc8072f86b1cba7f84ea1" prot="public" static="no">
        <type>spb::RepeatedUInt64Meta</type>
        <definition>typedef spb::RepeatedUInt64Meta UInt64Msg</definition>
        <argsstring></argsstring>
        <name>UInt64Msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="20" column="33" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="metadata_8h_1ac96b2869443c5ef6d47ab688751937b9" prot="public" static="no">
        <type>spb::RepeatedSInt32Meta</type>
        <definition>typedef spb::RepeatedSInt32Meta Int32Msg</definition>
        <argsstring></argsstring>
        <name>Int32Msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="21" column="33" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="metadata_8h_1a1ce90716a363bc79e8734cef4b5f7940" prot="public" static="no">
        <type>spb::RepeatedUInt32Meta</type>
        <definition>typedef spb::RepeatedUInt32Meta UInt32Msg</definition>
        <argsstring></argsstring>
        <name>UInt32Msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="22" column="33" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="metadata_8h_1a234c0bf34e3f62b0543fd5cfb33ca79c" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int string_type</definition>
        <argsstring></argsstring>
        <name>string_type</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="26" column="18" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1ad0dca07fb87eb568e080959c8494b004" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int double_type</definition>
        <argsstring></argsstring>
        <name>double_type</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="27" column="18" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1a6d559610408185ef5e5045d441972c7e" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int float_type</definition>
        <argsstring></argsstring>
        <name>float_type</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="28" column="18" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1ad4a0e6e29cbb15da47ede0d1ede63eb3" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int int64_type</definition>
        <argsstring></argsstring>
        <name>int64_type</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="29" column="18" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1ac555d2201fec802ce0ae2c290655a005" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int uint64_type</definition>
        <argsstring></argsstring>
        <name>uint64_type</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="30" column="18" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1acde0cad94bdcd7983569101a878f359c" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int int32_type</definition>
        <argsstring></argsstring>
        <name>int32_type</name>
        <initializer>= 6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="31" column="18" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1adbbaae92920159180f6402b6d4acda13" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int uint32_type</definition>
        <argsstring></argsstring>
        <name>uint32_type</name>
        <initializer>= 7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="32" column="18" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1ac84c6939770531dda62b9ea2aea0e448" prot="public" static="yes" mutable="no">
        <type>const std::unordered_map&lt; std::string, int &gt;</type>
        <definition>const std::unordered_map&lt;std::string, int&gt; meta_type_map</definition>
        <argsstring></argsstring>
        <name>meta_type_map</name>
        <initializer>{ {&quot;STRING&quot;, string_type},
                   {&quot;DOUBLE&quot;, double_type},
                   {&quot;FLOAT&quot;, float_type},
                   {&quot;INT64&quot;, int64_type},
                   {&quot;UINT64&quot;, uint64_type},
                   {&quot;INT32&quot;, int32_type},
                   {&quot;UINT32&quot;, uint32_type} }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="35" column="5" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1a7425434e5fc22dea161166e78970aeaf" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* top_string_msg</definition>
        <argsstring></argsstring>
        <name>top_string_msg</name>
        <initializer>= &quot;repeated_string_meta&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="46" column="19" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1aef019f0e03d412d90404cc98c475eb3b" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* top_double_msg</definition>
        <argsstring></argsstring>
        <name>top_double_msg</name>
        <initializer>= &quot;repeated_double_meta&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="47" column="19" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1afba0ad65e1d75f8e8a02dd7dcc40b7eb" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* top_float_msg</definition>
        <argsstring></argsstring>
        <name>top_float_msg</name>
        <initializer>= &quot;repeated_float_meta&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="48" column="19" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1a97777780a163aab03133bfd3d3437f78" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* top_int64_msg</definition>
        <argsstring></argsstring>
        <name>top_int64_msg</name>
        <initializer>= &quot;repeated_sint64_meta&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="49" column="19" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1a2a46570325690e293f8247e14dbc3b72" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* top_uint64_msg</definition>
        <argsstring></argsstring>
        <name>top_uint64_msg</name>
        <initializer>= &quot;repeated_uint64_meta&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="50" column="19" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1a63885026981c213d926bb06b0770fc00" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* top_int32_msg</definition>
        <argsstring></argsstring>
        <name>top_int32_msg</name>
        <initializer>= &quot;repeated_sint32_meta&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="51" column="19" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="metadata_8h_1a19fde2a2bbde264968fab6123398a3a4" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* top_uint32_msg</definition>
        <argsstring></argsstring>
        <name>top_uint32_msg</name>
        <initializer>= &quot;repeated_uint32_meta&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/metadata.h" line="52" column="19" bodyfile="/Users/mellis/silc/include/metadata.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classCommand" kindref="compound">Command</ref> class for constructing meta data messages. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SMARTSIM_METADATA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SMARTSIM_METADATA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unordered_map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;silc.pb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;google/protobuf/reflection.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;google/protobuf/stubs/port.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;memorylist.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">gpb<sp/>=<sp/>google::protobuf;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">spb<sp/>=<sp/>SILCProtobuf;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//Typedef<sp/>protobuf<sp/>message<sp/>names<sp/>in<sp/>case<sp/>proto<sp/>file<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>spb::RepeatedStringMeta<sp/>StringMsg;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>spb::RepeatedDoubleMeta<sp/>DoubleMsg;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>spb::RepeatedFloatMeta<sp/>FloatMsg;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>spb::RepeatedSInt64Meta<sp/>Int64Msg;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>spb::RepeatedUInt64Meta<sp/>UInt64Msg;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>spb::RepeatedSInt32Meta<sp/>Int32Msg;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>spb::RepeatedUInt32Meta<sp/>UInt32Msg;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//An<sp/>unordered_map<sp/>of<sp/>std::string<sp/>type<sp/>(key)<sp/>and<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//integer<sp/>that<sp/>to<sp/>cut<sp/>down<sp/>on<sp/>strcmp<sp/>throughout<sp/>the<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>string_type<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>double_type<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>float_type<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int64_type<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uint64_type<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int32_type<sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uint32_type<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::unordered_map&lt;std::string,<sp/>int&gt;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>meta_type_map{<sp/>{</highlight><highlight class="stringliteral">&quot;STRING&quot;</highlight><highlight class="normal">,<sp/>string_type},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;DOUBLE&quot;</highlight><highlight class="normal">,<sp/>double_type},</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;FLOAT&quot;</highlight><highlight class="normal">,<sp/>float_type},</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;INT64&quot;</highlight><highlight class="normal">,<sp/>int64_type},</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;UINT64&quot;</highlight><highlight class="normal">,<sp/>uint64_type},</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;INT32&quot;</highlight><highlight class="normal">,<sp/>int32_type},</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;UINT32&quot;</highlight><highlight class="normal">,<sp/>uint32_type}<sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//Declare<sp/>the<sp/>top<sp/>level<sp/>container<sp/>names<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//protobuf<sp/>message<sp/>so<sp/>that<sp/>they<sp/>are<sp/>not<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//strings<sp/>scattered<sp/>throughout<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>top_string_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;repeated_string_meta&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>top_double_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;repeated_double_meta&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>top_float_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;repeated_float_meta&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>top_int64_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;repeated_sint64_meta&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>top_uint64_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;repeated_uint64_meta&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>top_int32_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;repeated_sint32_meta&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>top_uint32_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;repeated_uint32_meta&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMetaData" kindref="compound">MetaData</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="classMetaData" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classMetaData" kindref="compound">MetaData</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="classMetaData_1a09624859fbfe017f451e6cd0c2f4f421" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMetaData_1a09624859fbfe017f451e6cd0c2f4f421" kindref="member">MetaData</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="classMetaData_1aae91a1ae4c829098b2e687d6d48cf29b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMetaData_1aae91a1ae4c829098b2e687d6d48cf29b" kindref="member">MetaData</ref>(<ref refid="classMetaData" kindref="compound">MetaData</ref>&amp;&amp;<sp/>metadata);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classMetaData_1a3b8970bdc1904864ef564a0a1324121a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMetaData" kindref="compound">MetaData</ref>&amp;<sp/><ref refid="classMetaData_1a3b8970bdc1904864ef564a0a1324121a" kindref="member">operator=</ref>(<ref refid="classMetaData" kindref="compound">MetaData</ref>&amp;&amp;<sp/>metadata);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="classMetaData_1a7db9d9b9ba38f0d96ae6a986457779df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMetaData_1a7db9d9b9ba38f0d96ae6a986457779df" kindref="member">fill_from_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf<sp/>,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>buf_size<sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="classMetaData_1aa1d961da0733a41a6e16462a5ee56355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMetaData_1aa1d961da0733a41a6e16462a5ee56355" kindref="member">add_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>field_name<sp/>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type<sp/>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>value<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="classMetaData_1aa50b695013b195c86195da563327f7de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classMetaData_1aa50b695013b195c86195da563327f7de" kindref="member">get_values</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>name<sp/>,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type<sp/>,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;<sp/>data<sp/>,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>length<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="classMetaData_1a3e073f4b2e981037ce5bd4fe166821e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string_view<sp/><ref refid="classMetaData_1a3e073f4b2e981037ce5bd4fe166821e9" kindref="member">get_metadata_buf</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spb::MetaData<sp/>_pb_metadata_msg;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unordered_map&lt;std::string,<sp/>gpb::Message*&gt;<sp/>_meta_msg_map;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;char*&gt;</ref>_char_array_mem_mgr;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;char&gt;</ref><sp/>_char_mem_mgr;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;double&gt;</ref><sp/>_double_mem_mgr;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;float&gt;</ref><sp/>_float_mem_mgr;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;int64_t&gt;</ref><sp/>_int64_mem_mgr;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;uint64_t&gt;</ref><sp/>_uint64_mem_mgr;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;int32_t&gt;</ref><sp/>_int32_mem_mgr;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;uint32_t&gt;</ref><sp/>_uint32_mem_mgr;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>_buf;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_unpack_metadata(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>field_name<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_create_message(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>field_name<sp/>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PB&gt;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_create_message_by_type(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>field_name<sp/>,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>container_name<sp/></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_set_string_in_message(gpb::Message*<sp/>msg<sp/>,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>field_name<sp/>,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>value<sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_get_string_field_values(gpb::Message*<sp/>msg<sp/>,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;<sp/>data<sp/>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>length<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>_get_numeric_field_values(gpb::Message*<sp/>msg<sp/>,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*&amp;<sp/>data<sp/>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>n_values<sp/>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classMemoryList" kindref="compound">MemoryList&lt;T&gt;</ref>&amp;<sp/>mem_list<sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_field_exists(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>field_name<sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_get_type_integer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>type<sp/></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//SMARTSIM_METADATA_H</highlight></codeline>
    </programlisting>
    <location file="/Users/mellis/silc/include/metadata.h"/>
  </compounddef>
</doxygen>
