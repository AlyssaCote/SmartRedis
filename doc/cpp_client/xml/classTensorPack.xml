<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="classTensorPack" kind="class" language="C++" prot="public">
    <compoundname>TensorPack</compoundname>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classTensorPack_1afdd8b3882c7771632e5c342bbea6e7f5" prot="public" static="no">
        <type>std::forward_list&lt; <ref refid="classTensorBase" kindref="compound">TensorBase</ref> * &gt;::iterator</type>
        <definition>typedef std::forward_list&lt;TensorBase*&gt;::iterator TensorPack::tensorbase_iterator</definition>
        <argsstring></argsstring>
        <name>tensorbase_iterator</name>
        <briefdescription>
<para>Iterators for tensors. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="54" column="46" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classTensorPack_1a617c4369839534b10ec3a4afc8f46391" prot="public" static="no">
        <type>std::forward_list&lt; <ref refid="classTensorBase" kindref="compound">TensorBase</ref> * &gt;::const_iterator</type>
        <definition>typedef std::forward_list&lt;TensorBase*&gt;::const_iterator TensorPack::const_tensorbase_iterator</definition>
        <argsstring></argsstring>
        <name>const_tensorbase_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="55" column="52" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classTensorPack_1a9e484eb6cef8056f37ead4e7b2911143" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensorBase" kindref="compound">TensorBase</ref> * &gt;</type>
        <definition>std::forward_list&lt;TensorBase*&gt; TensorPack::_all_tensors</definition>
        <argsstring></argsstring>
        <name>_all_tensors</name>
        <briefdescription>
<para>A forward list of all <ref refid="classTensorBase" kindref="compound">TensorBase</ref> to make iterating easier. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="81" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1a693a6f5291e976b8bccd7babc47769df" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, <ref refid="classTensorBase" kindref="compound">TensorBase</ref> * &gt;</type>
        <definition>std::unordered_map&lt;std::string, TensorBase*&gt; TensorPack::_tensorbase_inventory</definition>
        <argsstring></argsstring>
        <name>_tensorbase_inventory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A map used to query and retrieve tensors. We can only return the TensoreBase values since the Tensors are templated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="85" column="28" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1a7ddb77661856dbaad3a795d4951e262a" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; double &gt; * &gt;</type>
        <definition>std::forward_list&lt;Tensor&lt;double&gt;*&gt; TensorPack::_tensors_double</definition>
        <argsstring></argsstring>
        <name>_tensors_double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forward lists of the actual tensor types that will be used for memory management and operations on non-base class tensors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="89" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1a8a62af34b2f1ec3f26319ef7db7bf353" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; float &gt; * &gt;</type>
        <definition>std::forward_list&lt;Tensor&lt;float&gt;*&gt; TensorPack::_tensors_float</definition>
        <argsstring></argsstring>
        <name>_tensors_float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="90" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1ab3b95d75790c0e67483fcd02e714bcab" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; int64_t &gt; * &gt;</type>
        <definition>std::forward_list&lt;Tensor&lt;int64_t&gt;*&gt; TensorPack::_tensors_int64</definition>
        <argsstring></argsstring>
        <name>_tensors_int64</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="91" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1a530c2f2a450bc5926eeba994ab634434" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; int32_t &gt; * &gt;</type>
        <definition>std::forward_list&lt;Tensor&lt;int32_t&gt;*&gt; TensorPack::_tensors_int32</definition>
        <argsstring></argsstring>
        <name>_tensors_int32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="92" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1a3cf7bd253cf2270c5e86787849089a15" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; int16_t &gt; * &gt;</type>
        <definition>std::forward_list&lt;Tensor&lt;int16_t&gt;*&gt; TensorPack::_tensors_int16</definition>
        <argsstring></argsstring>
        <name>_tensors_int16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="93" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1a5ff82e447dbce576ca34d21082caf903" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; int8_t &gt; * &gt;</type>
        <definition>std::forward_list&lt;Tensor&lt;int8_t&gt;*&gt; TensorPack::_tensors_int8</definition>
        <argsstring></argsstring>
        <name>_tensors_int8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="94" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1a0215b57419314735247e496d64420580" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; uint16_t &gt; * &gt;</type>
        <definition>std::forward_list&lt;Tensor&lt;uint16_t&gt;*&gt; TensorPack::_tensors_uint16</definition>
        <argsstring></argsstring>
        <name>_tensors_uint16</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="95" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classTensorPack_1a4f06813817f600c6e80bf8ac2f6d7676" prot="private" static="no" mutable="no">
        <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; uint8_t &gt; * &gt;</type>
        <definition>std::forward_list&lt;Tensor&lt;uint8_t&gt;*&gt; TensorPack::_tensors_uint8</definition>
        <argsstring></argsstring>
        <name>_tensors_uint8</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="96" column="27" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classTensorPack_1acaaa3ebe20176d34416fdedfe843e0f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TensorPack::TensorPack</definition>
        <argsstring>()</argsstring>
        <name>TensorPack</name>
        <briefdescription>
<para>Dataset constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="22" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a31010b7660b28aa9b6a171088854fbb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TensorPack::TensorPack</definition>
        <argsstring>(const TensorPack &amp;tensorpack)</argsstring>
        <name>TensorPack</name>
        <param>
          <type>const <ref refid="classTensorPack" kindref="compound">TensorPack</ref> &amp;</type>
          <declname>tensorpack</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="25" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1adf3f9ae6a7ffe188fef8c62772bb6f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TensorPack::TensorPack</definition>
        <argsstring>(TensorPack &amp;&amp;tensorpack)</argsstring>
        <name>TensorPack</name>
        <param>
          <type><ref refid="classTensorPack" kindref="compound">TensorPack</ref> &amp;&amp;</type>
          <declname>tensorpack</declname>
        </param>
        <briefdescription>
<para>Move constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="28" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a4eac184f71b083ccb070f39fdcba93e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTensorPack" kindref="compound">TensorPack</ref> &amp;</type>
        <definition>TensorPack&amp; TensorPack::operator=</definition>
        <argsstring>(const TensorPack &amp;tensorpack)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classTensorPack" kindref="compound">TensorPack</ref> &amp;</type>
          <declname>tensorpack</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="31" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a0fe94a765394cab96fce5054789184e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTensorPack" kindref="compound">TensorPack</ref> &amp;</type>
        <definition>TensorPack&amp; TensorPack::operator=</definition>
        <argsstring>(TensorPack &amp;&amp;tensorpack)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classTensorPack" kindref="compound">TensorPack</ref> &amp;&amp;</type>
          <declname>tensorpack</declname>
        </param>
        <briefdescription>
<para>Move assignment operator. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="34" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1ab9f83ec17f831b24dce6fc750a2db48e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TensorPack::~TensorPack</definition>
        <argsstring>()</argsstring>
        <name>~TensorPack</name>
        <briefdescription>
<para><ref refid="classTensorPack" kindref="compound">TensorPack</ref> destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="37" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1abf78f6f545863285bfa8e89c571612ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TensorPack::add_tensor</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;type, void *data, const std::vector&lt; int &gt; &amp;dims)</argsstring>
        <name>add_tensor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <briefdescription><para>A c_ptr to the data of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>dims</declname>
          <briefdescription><para>The dimensions of the data </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Add a tensor to the dataset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="40" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a67e993ba85c13ccbda15041d3ce9db7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TensorPack::add_tensor</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;type, const std::vector&lt; int &gt; &amp;dims, const std::string_view &amp;buf)</argsstring>
        <name>add_tensor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>type</declname>
          <briefdescription><para>The data type of the tensor </para>
</briefdescription>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>dims</declname>
          <briefdescription><para>The dimensions of the data </para>
</briefdescription>
        </param>
        <param>
          <type>const std::string_view &amp;</type>
          <declname>buf</declname>
          <briefdescription><para>A c_ptr to the data of the tensor </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Method for adding a tensor using a buffer instead of data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="47" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a186281cc9630bce777a59136a1fd975e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTensorBase" kindref="compound">TensorBase</ref> *</type>
        <definition>TensorBase* TensorPack::get_tensor</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_tensor</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Return a <ref refid="classTensorBase" kindref="compound">TensorBase</ref> pointer based on name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="58" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a9692e831850ee3893cc8b34b9df90420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* TensorPack::get_tensor_data</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>get_tensor_data</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Return a pointer to the tensor data memory space. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="62" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a48b6cd6d199bc7996296787f2287824d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TensorPack::tensor_exists</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>tensor_exists</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
          <briefdescription><para>The name used to reference the tensor </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Returns boolean indicating if tensor by that name exists. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="66" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a5a7a1f003531273880ecfbc7a3815f70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTensorPack_1afdd8b3882c7771632e5c342bbea6e7f5" kindref="member">tensorbase_iterator</ref></type>
        <definition>tensorbase_iterator TensorPack::tensor_begin</definition>
        <argsstring>()</argsstring>
        <name>tensor_begin</name>
        <briefdescription>
<para>Returns an iterator pointing to the tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="70" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1aee6b32fef1d8ba0504e7e63e312fdde9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const_tensorbase_iterator</type>
        <definition>const_tensorbase_iterator TensorPack::tensor_cbegin</definition>
        <argsstring>()</argsstring>
        <name>tensor_cbegin</name>
        <briefdescription>
<para>Returns an const_iterator pointing to the tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="72" column="35"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a9ca3ef0dbb04315a9664f54cce120c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classTensorPack_1afdd8b3882c7771632e5c342bbea6e7f5" kindref="member">tensorbase_iterator</ref></type>
        <definition>tensorbase_iterator TensorPack::tensor_end</definition>
        <argsstring>()</argsstring>
        <name>tensor_end</name>
        <briefdescription>
<para>Returns an iterator pointing to the past-the-end tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="74" column="29"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1af73df7b2c93d680e059e7e228b08adb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const_tensorbase_iterator</type>
        <definition>const_tensorbase_iterator TensorPack::tensor_cend</definition>
        <argsstring>()</argsstring>
        <name>tensor_cend</name>
        <briefdescription>
<para>Returns an const_iterator pointing to the past-the-end tensor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="76" column="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classTensorPack_1a86348387a21243dc3dccd78e7609e695" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void TensorPack::_copy_tensor_list</definition>
        <argsstring>(const std::forward_list&lt; Tensor&lt; T &gt; * &gt; &amp;src_list, std::forward_list&lt; Tensor&lt; T &gt; * &gt; &amp;dest_list)</argsstring>
        <name>_copy_tensor_list</name>
        <param>
          <type>const std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; T &gt; * &gt; &amp;</type>
          <declname>src_list</declname>
          <briefdescription><para>The source tensor list </para>
</briefdescription>
        </param>
        <param>
          <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; T &gt; * &gt; &amp;</type>
          <declname>dest_list</declname>
          <briefdescription><para>The destination tensor list </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Copy a <ref refid="classTensor" kindref="compound">Tensor</ref> forward list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="100" column="21"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classTensorPack_1a9c25a31348c049fbdc429b1e21ea0a51" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TensorPack::_refresh_tensorbase_inventory</definition>
        <argsstring>()</argsstring>
        <name>_refresh_tensorbase_inventory</name>
        <briefdescription>
<para>This function will clear and refresh the tensorbase inventory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="105" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a7377804a690e2e9aebee6169254a410a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TensorPack::_add_to_tensorbase_inventory</definition>
        <argsstring>(const std::forward_list&lt; Tensor&lt; T &gt; * &gt; &amp;tensor_list)</argsstring>
        <name>_add_to_tensorbase_inventory</name>
        <param>
          <type>const std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; T &gt; * &gt; &amp;</type>
          <declname>tensor_list</declname>
          <briefdescription><para>The tensor list to add to the inventory </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Add all entries in the <ref refid="classTensor" kindref="compound">Tensor</ref> list to the tensor inventory. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="109" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1ac30f0b5a18bed2ce3ea03444f2a10089" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void TensorPack::_delete_all_tensors</definition>
        <argsstring>()</argsstring>
        <name>_delete_all_tensors</name>
        <briefdescription>
<para>This deletes all tensors in each tensor list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="113" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classTensorPack_1a6384f08469b3dfb2a57e8771c0838f12" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void TensorPack::_delete_tensor_list</definition>
        <argsstring>(std::forward_list&lt; Tensor&lt; T &gt; * &gt; &amp;tensor_list)</argsstring>
        <name>_delete_tensor_list</name>
        <param>
          <type>std::forward_list&lt; <ref refid="classTensor" kindref="compound">Tensor</ref>&lt; T &gt; * &gt; &amp;</type>
          <declname>tensor_list</declname>
          <briefdescription><para>The tensor list to delete </para>
</briefdescription>
        </param>
        <briefdescription>
<para>Delete an individual tensor list. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mellis/silc/include/tensorpack.h" line="117" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/mellis/silc/include/tensorpack.h" line="17" column="1" bodyfile="/Users/mellis/silc/include/tensorpack.h" bodystart="18" bodyend="119"/>
    <listofallmembers>
      <member refid="classTensorPack_1a7377804a690e2e9aebee6169254a410a" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_add_to_tensorbase_inventory</name></member>
      <member refid="classTensorPack_1a9e484eb6cef8056f37ead4e7b2911143" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_all_tensors</name></member>
      <member refid="classTensorPack_1a86348387a21243dc3dccd78e7609e695" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_copy_tensor_list</name></member>
      <member refid="classTensorPack_1ac30f0b5a18bed2ce3ea03444f2a10089" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_delete_all_tensors</name></member>
      <member refid="classTensorPack_1a6384f08469b3dfb2a57e8771c0838f12" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_delete_tensor_list</name></member>
      <member refid="classTensorPack_1a9c25a31348c049fbdc429b1e21ea0a51" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_refresh_tensorbase_inventory</name></member>
      <member refid="classTensorPack_1a693a6f5291e976b8bccd7babc47769df" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensorbase_inventory</name></member>
      <member refid="classTensorPack_1a7ddb77661856dbaad3a795d4951e262a" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensors_double</name></member>
      <member refid="classTensorPack_1a8a62af34b2f1ec3f26319ef7db7bf353" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensors_float</name></member>
      <member refid="classTensorPack_1a3cf7bd253cf2270c5e86787849089a15" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensors_int16</name></member>
      <member refid="classTensorPack_1a530c2f2a450bc5926eeba994ab634434" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensors_int32</name></member>
      <member refid="classTensorPack_1ab3b95d75790c0e67483fcd02e714bcab" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensors_int64</name></member>
      <member refid="classTensorPack_1a5ff82e447dbce576ca34d21082caf903" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensors_int8</name></member>
      <member refid="classTensorPack_1a0215b57419314735247e496d64420580" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensors_uint16</name></member>
      <member refid="classTensorPack_1a4f06813817f600c6e80bf8ac2f6d7676" prot="private" virt="non-virtual"><scope>TensorPack</scope><name>_tensors_uint8</name></member>
      <member refid="classTensorPack_1abf78f6f545863285bfa8e89c571612ec" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>add_tensor</name></member>
      <member refid="classTensorPack_1a67e993ba85c13ccbda15041d3ce9db7e" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>add_tensor</name></member>
      <member refid="classTensorPack_1a617c4369839534b10ec3a4afc8f46391" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>const_tensorbase_iterator</name></member>
      <member refid="classTensorPack_1a186281cc9630bce777a59136a1fd975e" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>get_tensor</name></member>
      <member refid="classTensorPack_1a9692e831850ee3893cc8b34b9df90420" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>get_tensor_data</name></member>
      <member refid="classTensorPack_1a4eac184f71b083ccb070f39fdcba93e4" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>operator=</name></member>
      <member refid="classTensorPack_1a0fe94a765394cab96fce5054789184e1" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>operator=</name></member>
      <member refid="classTensorPack_1a5a7a1f003531273880ecfbc7a3815f70" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>tensor_begin</name></member>
      <member refid="classTensorPack_1aee6b32fef1d8ba0504e7e63e312fdde9" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>tensor_cbegin</name></member>
      <member refid="classTensorPack_1af73df7b2c93d680e059e7e228b08adb4" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>tensor_cend</name></member>
      <member refid="classTensorPack_1a9ca3ef0dbb04315a9664f54cce120c11" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>tensor_end</name></member>
      <member refid="classTensorPack_1a48b6cd6d199bc7996296787f2287824d" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>tensor_exists</name></member>
      <member refid="classTensorPack_1afdd8b3882c7771632e5c342bbea6e7f5" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>tensorbase_iterator</name></member>
      <member refid="classTensorPack_1acaaa3ebe20176d34416fdedfe843e0f8" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>TensorPack</name></member>
      <member refid="classTensorPack_1a31010b7660b28aa9b6a171088854fbb6" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>TensorPack</name></member>
      <member refid="classTensorPack_1adf3f9ae6a7ffe188fef8c62772bb6f2b" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>TensorPack</name></member>
      <member refid="classTensorPack_1ab9f83ec17f831b24dce6fc750a2db48e" prot="public" virt="non-virtual"><scope>TensorPack</scope><name>~TensorPack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
